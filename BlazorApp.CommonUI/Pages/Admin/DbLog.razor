@page "/admin/dbLog"

@attribute [Authorize(Policy = Policies.IsAdmin)]
@layout MainLayout
@inherits PageModels.Admin.DbLogPageModel

<h1>Serilog Database Log Viewer</h1>
<p>
    Secured Page.<br />
    Paginated viewing and fetching of system logs from the database.
</p>

@if (ApiResponse == null)
{
    <LoadingBackground ShowLogoBox="true">
        <label>Loading Database Log Data</label>
    </LoadingBackground>
}
else
{
    <div class="row" style="margin-left: 0;">
        <RefreshTimer StartEnabled="true" ElapsedEvent="@(async (_, __) => await LoadData())" />
    </div>
    <MatTable Items="@DbLogItems" Class="mat-elevation-z5" Striped="true" PageSize="@PageSize" ShowPaging="false">
        <MatTableHeader>
            <th>
                <div style="width: 175px;">
                    <MatFAB Mini="true" Class="@($"{MatfabAnimateClass}")" Icon="refresh" OnClick="@LoadData" Raised="true" Style="margin-right: 16px;" />
                    Timestamp
                </div>
            </th>
            <th>
                Logging Level
            </th>
            <th>
                Log Message
            </th>
            <th style="min-width: 400px; max-width: 800px;">
                Exception (if any)
            </th>
            <th>
                Recorded Properties
            </th>
        </MatTableHeader>
        <MatTableRow>
            <td>
                <span style="font-size: small">
                    @context.TimeStamp.ToString()
                </span>
            </td>
            <td>
                <span style="font-size: small">
                    @context.Level
                </span>
            </td>
            <td>
                <span style="font-size: small">
                    @context.Message
                </span>
            </td>
            <td style="min-width: 400px; max-width: 800px;">
                <span style="font-size: small">
                    @context.Exception?.ToString()
                </span>
            </td>
            <td>
                @if (context.LogProperties?.Any() ?? false)
                    {
                    <ul>
                        @foreach (var propertyPair in context.LogProperties)
                            {
                            <li style="font-size:small">@($"{propertyPair.Key}:  {propertyPair.Value}")</li>
                            }
                    </ul>
                    }
            </td>
        </MatTableRow>
    </MatTable>
    <MatPaginator PageSize="@PageSize" Page="@(async a=> await OnPage(a))" Length="@LogCountTotal" Style="background: transparent">
    </MatPaginator>
}